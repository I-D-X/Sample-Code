//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyGate_Global_Enterprise.enterprise.mygateglobal.com
{
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("SharpDevelop", "3.2.1.6466")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="epayservice.cfcSoapBinding", Namespace="https://enterprise.mygateglobal.com/5x0x0/epayservice.cfc")]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(Map))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(QueryBean))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(CFCInvocationException))]
    public partial class ePayService : System.Web.Services.Protocols.SoapHttpClientProtocol
    {
        
        /// <remarks/>
        public ePayService()
        {
            this.Url = "https://enterprise.mygateglobal.com/5x0x0/epayservice.cfc";
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="https://enterprise.mygateglobal.com/5x0x0/epayservice.cfc", ResponseNamespace="https://enterprise.mygateglobal.com/5x0x0/epayservice.cfc")]
        [return: System.Xml.Serialization.SoapElementAttribute("fProcessReturn")]
        public object[] fProcess(
                    string GatewayID, 
                    string MerchantID, 
                    string ApplicationID, 
                    string Action, 
                    string TransactionIndex, 
                    string Terminal, 
                    string Mode, 
                    string MerchantReference, 
                    string Amount, 
                    string Currency, 
                    string CashBackAmount, 
                    string CardType, 
                    string AccountType, 
                    string CardNumber, 
                    string CardHolder, 
                    string CVVNumber, 
                    string ExpiryMonth, 
                    string ExpiryYear, 
                    string Budget, 
                    string BudgetPeriod, 
                    string AuthorisationNumber, 
                    string PIN, 
                    string DebugMode, 
                    string eCommerceIndicator, 
                    string verifiedByVisaXID, 
                    string verifiedByVisaCAFF, 
                    string secureCodeUCAF, 
                    string UCI, 
                    string IPAddress, 
                    string ShippingCountryCode, 
                    string PurchaseItemsID)
        {
            object[] results = this.Invoke("fProcess", new object[] {
                        GatewayID,
                        MerchantID,
                        ApplicationID,
                        Action,
                        TransactionIndex,
                        Terminal,
                        Mode,
                        MerchantReference,
                        Amount,
                        Currency,
                        CashBackAmount,
                        CardType,
                        AccountType,
                        CardNumber,
                        CardHolder,
                        CVVNumber,
                        ExpiryMonth,
                        ExpiryYear,
                        Budget,
                        BudgetPeriod,
                        AuthorisationNumber,
                        PIN,
                        DebugMode,
                        eCommerceIndicator,
                        verifiedByVisaXID,
                        verifiedByVisaCAFF,
                        secureCodeUCAF,
                        UCI,
                        IPAddress,
                        ShippingCountryCode,
                        PurchaseItemsID});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginfProcess(
                    string GatewayID, 
                    string MerchantID, 
                    string ApplicationID, 
                    string Action, 
                    string TransactionIndex, 
                    string Terminal, 
                    string Mode, 
                    string MerchantReference, 
                    string Amount, 
                    string Currency, 
                    string CashBackAmount, 
                    string CardType, 
                    string AccountType, 
                    string CardNumber, 
                    string CardHolder, 
                    string CVVNumber, 
                    string ExpiryMonth, 
                    string ExpiryYear, 
                    string Budget, 
                    string BudgetPeriod, 
                    string AuthorisationNumber, 
                    string PIN, 
                    string DebugMode, 
                    string eCommerceIndicator, 
                    string verifiedByVisaXID, 
                    string verifiedByVisaCAFF, 
                    string secureCodeUCAF, 
                    string UCI, 
                    string IPAddress, 
                    string ShippingCountryCode, 
                    string PurchaseItemsID, 
                    System.AsyncCallback callback, 
                    object asyncState)
        {
            return this.BeginInvoke("fProcess", new object[] {
                        GatewayID,
                        MerchantID,
                        ApplicationID,
                        Action,
                        TransactionIndex,
                        Terminal,
                        Mode,
                        MerchantReference,
                        Amount,
                        Currency,
                        CashBackAmount,
                        CardType,
                        AccountType,
                        CardNumber,
                        CardHolder,
                        CVVNumber,
                        ExpiryMonth,
                        ExpiryYear,
                        Budget,
                        BudgetPeriod,
                        AuthorisationNumber,
                        PIN,
                        DebugMode,
                        eCommerceIndicator,
                        verifiedByVisaXID,
                        verifiedByVisaCAFF,
                        secureCodeUCAF,
                        UCI,
                        IPAddress,
                        ShippingCountryCode,
                        PurchaseItemsID}, callback, asyncState);
        }
        
        /// <remarks/>
        public object[] EndfProcess(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="https://enterprise.mygateglobal.com/5x0x0/epayservice.cfc", ResponseNamespace="https://enterprise.mygateglobal.com/5x0x0/epayservice.cfc")]
        [return: System.Xml.Serialization.SoapElementAttribute("IsAliveReturn")]
        public double IsAlive(string strRemoteAddress, string strApplicationID)
        {
            object[] results = this.Invoke("IsAlive", new object[] {
                        strRemoteAddress,
                        strApplicationID});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginIsAlive(string strRemoteAddress, string strApplicationID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IsAlive", new object[] {
                        strRemoteAddress,
                        strApplicationID}, callback, asyncState);
        }
        
        /// <remarks/>
        public double EndIsAlive(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((double)(results[0]));
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("SharpDevelop", "3.2.1.6466")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xml.apache.org/xml-soap")]
    public partial class Map
    {
        
        /// <remarks/>
        public mapItem[] item;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("SharpDevelop", "3.2.1.6466")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xml.apache.org/xml-soap")]
    public partial class mapItem
    {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public object key;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public object value;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("SharpDevelop", "3.2.1.6466")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://rpc.xml.coldfusion")]
    public partial class QueryBean
    {
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string[] columnList;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public object[] data;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("SharpDevelop", "3.2.1.6466")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://rpc.xml.coldfusion")]
    public partial class CFCInvocationException
    {
    }
}
